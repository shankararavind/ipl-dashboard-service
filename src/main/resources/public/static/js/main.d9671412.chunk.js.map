{"version":3,"sources":["component/MatchDetailCard.js","component/MatchSmallCard.js","page/TeamPage.js","component/YearSelector.js","page/MatchPage.js","page/TeamTile.js","page/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","console","log","fetchTeam","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9671412.chunk.js","sourcesContent":["import {React} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './MatchDetailCard.scss'\r\n\r\nexport const MatchDetailCard = ({teamName, match}) => {\r\n  if (!match) return null;\r\n  if (!teamName) return null;\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/team/${otherTeam}`;\r\n  const isMatchWon = teamName === match.matchWinner;\r\n  return (\r\n    <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>      <div>\r\n        <span className=\"vs\">vs</span>\r\n        <h1><Link to = {otherTeamRoute}>{otherTeam}</Link></h1>\r\n        <h2 className=\"match-date\">on {match.date}</h2>\r\n        <h3 className=\"match-venue\">at {match.venue}</h3>\r\n        <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n      </div>\r\n      <div className=\"additional-details\">\r\n        <h3>First Innings</h3>\r\n        <p>{match.team1}</p>\r\n        <h3>Second Innings</h3>\r\n        <p>{match.team2}</p>\r\n        <h3>Man of the Match</h3>\r\n        <p>{match.playerOfMatch}</p>\r\n        <h3>Umpires</h3>\r\n        <p>{match.umpire1}, {match.umpire2}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {React} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './MatchSmallCard.scss'\r\n\r\nexport const MatchSmallCard = ({teamName, match}) => {\r\n\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/team/${otherTeam}`;\r\n  const isMatchWon = teamName === match.matchWinner;\r\n  return (\r\n    <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n      <div>\r\n        <h3>vs</h3>\r\n      </div>\r\n      <h3><Link to = {otherTeamRoute}>{otherTeam}</Link></h3>\r\n      <div className=\"match-result\">\r\n        <p>{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {React, useEffect, useState} from 'react'\r\nimport {useParams, Link} from 'react-router-dom'\r\nimport { MatchDetailCard } from '../component/MatchDetailCard'\r\nimport { MatchSmallCard } from '../component/MatchSmallCard'\r\nimport {PieChart} from 'react-minimal-pie-chart'\r\nimport './TeamPage.scss'\r\n\r\n\r\nexport const TeamPage = () => {\r\n\r\n  const [team, setTeam] = useState({matches: []});\r\n  const {teamName} = useParams();\r\n\r\n  useEffect(\r\n    () => {\r\n     const fetchTeam = async () => {\r\n       const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n       const data = await response.json(); \r\n       console.log(data);\r\n       setTeam(data);\r\n     };\r\n     fetchTeam(); \r\n    }, [teamName]\r\n\r\n\r\n  );\r\n  if (!team || !team.teamName)\r\n  {\r\n    return <h1>Team Not Found</h1>\r\n  }\r\n  return (\r\n    <div className=\"TeamPage\">\r\n      <div className=\"team-name-section\"><h1 className=\"team-name\">{team.teamName}</h1></div>\r\n      <div className=\"win-loss-section\">Wins / Losses\r\n        <PieChart data={[\r\n          {title:'Losses', value: team.totalMatches - team.totalWins, color : '#C90505'},\r\n          {title:'Wins', value: team.totalWins, color : '#088508'}\r\n        ]} />\r\n      </div>\r\n      <div className=\"match-detail-section\">\r\n        <h3>Latest Matches</h3>\r\n        <MatchDetailCard teamName={team.teamName} match={team.matches[0]}/>\r\n      </div>\r\n      \r\n        {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\r\n      \r\n      <div className=\"more-link\">\r\n        <Link to={`/team/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>\r\n          More...\r\n        </Link>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n ","import {React} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './YearSelector.scss'\r\n\r\n\r\nexport const YearSelector =  ({teamName}) => {\r\n\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for (let i=startYear; i<=endYear; i++)\r\n    {\r\n        years.push(i);\r\n    }\r\n\r\n    return (\r\n        <ol className=\"YearSelector\">\r\n            {\r\n                years.map(year => (            \r\n                    <li key={year}>\r\n                        <Link to={`/team/${teamName}/matches/${year}`}>{year}</Link>\r\n                    </li>\r\n                    )\r\n                )\r\n            }\r\n        </ol>\r\n        )\r\n}","import {React, useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport { MatchDetailCard } from '../component/MatchDetailCard'\r\nimport { YearSelector } from '../component/YearSelector'\r\nimport './MatchPage.scss'\r\n\r\nexport const MatchPage = () => {\r\n\r\n    const [matches, setMatches] = useState([]);\r\n    const {teamName, year} = useParams();\r\n    \r\n    useEffect(\r\n        () => {\r\n         const fetchMatches = async () => {\r\n           const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\r\n           const data = await response.json(); \r\n           setMatches(data);\r\n         };\r\n         fetchMatches(); \r\n        }, [teamName, year]\r\n    );\r\n\r\n    if (!matches)\r\n    {\r\n        return <h1>Team Not Found</h1>\r\n    }\r\n\r\n    return (\r\n        <div className=\"MatchPage\">\r\n            <div className=\"year-selector\">\r\n                <h3>Select Year</h3>\r\n                <YearSelector teamName={teamName}/>\r\n            </div>\r\n            <div>\r\n                <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\r\n                {\r\n                    matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\r\n                }\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}","import {React} from 'react'\r\nimport './TeamTile.scss'\r\nimport {Link} from 'react-router-dom'\r\n \r\nexport const TeamTile = ({teamName}) => \r\n{\r\n    return (\r\n    <Link to={`/team/${teamName}`}>\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                {teamName}\r\n            </h1>\r\n        </div>\r\n    </Link>\r\n    )\r\n}","import {React, useEffect, useState} from 'react'\r\nimport './HomePage.scss'\r\nimport { TeamTile } from './TeamTile'\r\n\r\n\r\nexport const HomePage = () => {\r\n\r\n  const [teams, setTeams] = useState([]);\r\n  \r\n  useEffect(\r\n    () => {\r\n     const fetchAllTeams = async () => {\r\n       const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\r\n       const data = await response.json(); \r\n       setTeams(data);\r\n     };\r\n     fetchAllTeams(); \r\n    }, []\r\n\r\n\r\n  );\r\n  return (\r\n    <div className=\"HomePage\">\r\n      <div className=\"header-section\">\r\n        <h1 className=\"app-name\">Java Brains IPL DashBoard</h1>\r\n      </div>\r\n      <div className=\"team-grid\">\r\n        {teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n  ","import './App.scss';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport { TeamPage } from './page/TeamPage';\nimport { MatchPage } from './page/MatchPage';\nimport { HomePage } from './page/HomePage';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/team/:teamName/matches/:year\">\n            <MatchPage />\n          </Route> \n          <Route path=\"/team/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}